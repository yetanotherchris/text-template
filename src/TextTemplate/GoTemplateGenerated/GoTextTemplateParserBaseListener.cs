//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GoTextTemplateParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace TextTemplate {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGoTextTemplateParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class GoTextTemplateParserBaseListener : IGoTextTemplateParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.template"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate([NotNull] GoTextTemplateParser.TemplateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.template"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate([NotNull] GoTextTemplateParser.TemplateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.content"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContent([NotNull] GoTextTemplateParser.ContentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.content"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContent([NotNull] GoTextTemplateParser.ContentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPart([NotNull] GoTextTemplateParser.PartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPart([NotNull] GoTextTemplateParser.PartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.placeholder"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlaceholder([NotNull] GoTextTemplateParser.PlaceholderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.placeholder"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlaceholder([NotNull] GoTextTemplateParser.PlaceholderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.path"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPath([NotNull] GoTextTemplateParser.PathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.path"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPath([NotNull] GoTextTemplateParser.PathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] GoTextTemplateParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] GoTextTemplateParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] GoTextTemplateParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] GoTextTemplateParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBlock([NotNull] GoTextTemplateParser.IfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBlock([NotNull] GoTextTemplateParser.IfBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.elseIfBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfBlock([NotNull] GoTextTemplateParser.ElseIfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.elseIfBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfBlock([NotNull] GoTextTemplateParser.ElseIfBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.elseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseBlock([NotNull] GoTextTemplateParser.ElseBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.elseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseBlock([NotNull] GoTextTemplateParser.ElseBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.forBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForBlock([NotNull] GoTextTemplateParser.ForBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.forBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForBlock([NotNull] GoTextTemplateParser.ForBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.rangeBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeBlock([NotNull] GoTextTemplateParser.RangeBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.rangeBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeBlock([NotNull] GoTextTemplateParser.RangeBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.rangeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeClause([NotNull] GoTextTemplateParser.RangeClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.rangeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeClause([NotNull] GoTextTemplateParser.RangeClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.varList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarList([NotNull] GoTextTemplateParser.VarListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.varList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarList([NotNull] GoTextTemplateParser.VarListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.varName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarName([NotNull] GoTextTemplateParser.VarNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.varName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarName([NotNull] GoTextTemplateParser.VarNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.open"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen([NotNull] GoTextTemplateParser.OpenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.open"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen([NotNull] GoTextTemplateParser.OpenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoTextTemplateParser.close"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClose([NotNull] GoTextTemplateParser.CloseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoTextTemplateParser.close"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClose([NotNull] GoTextTemplateParser.CloseContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace TextTemplate
