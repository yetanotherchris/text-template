//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GoTextTemplateLexer.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class GoTextTemplateLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		OPEN_TRIM=1, OPEN=2, TEXT=3, CLOSE_TRIM=4, CLOSE=5, IF=6, ELSE=7, END=8, 
		FOR=9, IN=10, DOT=11, LBRACK=12, RBRACK=13, NUMBER=14, STRING=15, BOOLEAN=16, 
		EQ=17, IDENT=18, COMMENT=19, WS=20;
	public const int
		EXPR=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "EXPR"
	};

	public static readonly string[] ruleNames = {
		"OPEN_TRIM", "OPEN", "TEXT", "CLOSE_TRIM", "CLOSE", "IF", "ELSE", "END", 
		"FOR", "IN", "DOT", "LBRACK", "RBRACK", "NUMBER", "STRING", "BOOLEAN", 
		"EQ", "IDENT", "COMMENT", "WS"
	};


	public GoTextTemplateLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public GoTextTemplateLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{{-'", "'{{'", null, "'-}}'", "'}}'", "'if'", "'else'", "'end'", 
		"'for'", "'in'", "'.'", "'['", "']'", null, null, null, "'eq'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OPEN_TRIM", "OPEN", "TEXT", "CLOSE_TRIM", "CLOSE", "IF", "ELSE", 
		"END", "FOR", "IN", "DOT", "LBRACK", "RBRACK", "NUMBER", "STRING", "BOOLEAN", 
		"EQ", "IDENT", "COMMENT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "GoTextTemplateLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static GoTextTemplateLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', '\x9C', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', 
		'\x15', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x6', 
		'\x4', ';', '\n', '\x4', '\r', '\x4', '\xE', '\x4', '<', '\x3', '\x5', 
		'\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', 
		'\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x6', '\xF', '\x64', 
		'\n', '\xF', '\r', '\xF', '\xE', '\xF', '\x65', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x10', '\a', '\x10', 'l', '\n', '\x10', 
		'\f', '\x10', '\xE', '\x10', 'o', '\v', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x5', 
		'\x11', '|', '\n', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\a', '\x13', '\x83', '\n', '\x13', '\f', 
		'\x13', '\xE', '\x13', '\x86', '\v', '\x13', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\a', '\x14', '\x8C', '\n', '\x14', '\f', 
		'\x14', '\xE', '\x14', '\x8F', '\v', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x6', '\x15', 
		'\x97', '\n', '\x15', '\r', '\x15', '\xE', '\x15', '\x98', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x8D', '\x2', '\x16', '\x4', '\x3', '\x6', '\x4', 
		'\b', '\x5', '\n', '\x6', '\f', '\a', '\xE', '\b', '\x10', '\t', '\x12', 
		'\n', '\x14', '\v', '\x16', '\f', '\x18', '\r', '\x1A', '\xE', '\x1C', 
		'\xF', '\x1E', '\x10', ' ', '\x11', '\"', '\x12', '$', '\x13', '&', '\x14', 
		'(', '\x15', '*', '\x16', '\x4', '\x2', '\x3', '\b', '\x3', '\x2', '}', 
		'}', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '$', '$', '^', '^', '\x5', 
		'\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x6', '\x2', '\x32', 
		';', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x5', '\x2', '\v', '\f', 
		'\xF', '\xF', '\"', '\"', '\x2', '\xA3', '\x2', '\x4', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x6', '\x3', '\x2', '\x2', '\x2', '\x2', '\b', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\n', '\x3', '\x2', '\x2', '\x2', '\x3', '\f', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\xE', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x10', '\x3', '\x2', '\x2', '\x2', '\x3', '\x12', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x14', '\x3', '\x2', '\x2', '\x2', '\x3', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x18', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1C', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x3', ' ', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\"', '\x3', '\x2', '\x2', '\x2', '\x3', '$', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '&', '\x3', '\x2', '\x2', '\x2', '\x3', '(', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '*', '\x3', '\x2', '\x2', '\x2', '\x4', 
		',', '\x3', '\x2', '\x2', '\x2', '\x6', '\x32', '\x3', '\x2', '\x2', '\x2', 
		'\b', ':', '\x3', '\x2', '\x2', '\x2', '\n', '>', '\x3', '\x2', '\x2', 
		'\x2', '\f', '\x44', '\x3', '\x2', '\x2', '\x2', '\xE', 'I', '\x3', '\x2', 
		'\x2', '\x2', '\x10', 'L', '\x3', '\x2', '\x2', '\x2', '\x12', 'Q', '\x3', 
		'\x2', '\x2', '\x2', '\x14', 'U', '\x3', '\x2', '\x2', '\x2', '\x16', 
		'Y', '\x3', '\x2', '\x2', '\x2', '\x18', '\\', '\x3', '\x2', '\x2', '\x2', 
		'\x1A', '^', '\x3', '\x2', '\x2', '\x2', '\x1C', '`', '\x3', '\x2', '\x2', 
		'\x2', '\x1E', '\x63', '\x3', '\x2', '\x2', '\x2', ' ', 'g', '\x3', '\x2', 
		'\x2', '\x2', '\"', '{', '\x3', '\x2', '\x2', '\x2', '$', '}', '\x3', 
		'\x2', '\x2', '\x2', '&', '\x80', '\x3', '\x2', '\x2', '\x2', '(', '\x87', 
		'\x3', '\x2', '\x2', '\x2', '*', '\x96', '\x3', '\x2', '\x2', '\x2', ',', 
		'-', '\a', '}', '\x2', '\x2', '-', '.', '\a', '}', '\x2', '\x2', '.', 
		'/', '\a', '/', '\x2', '\x2', '/', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\x30', '\x31', '\b', '\x2', '\x2', '\x2', '\x31', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x32', '\x33', '\a', '}', '\x2', '\x2', '\x33', '\x34', 
		'\a', '}', '\x2', '\x2', '\x34', '\x35', '\x3', '\x2', '\x2', '\x2', '\x35', 
		'\x36', '\b', '\x3', '\x2', '\x2', '\x36', '\a', '\x3', '\x2', '\x2', 
		'\x2', '\x37', ';', '\n', '\x2', '\x2', '\x2', '\x38', '\x39', '\a', '}', 
		'\x2', '\x2', '\x39', ';', '\n', '\x2', '\x2', '\x2', ':', '\x37', '\x3', 
		'\x2', '\x2', '\x2', ':', '\x38', '\x3', '\x2', '\x2', '\x2', ';', '<', 
		'\x3', '\x2', '\x2', '\x2', '<', ':', '\x3', '\x2', '\x2', '\x2', '<', 
		'=', '\x3', '\x2', '\x2', '\x2', '=', '\t', '\x3', '\x2', '\x2', '\x2', 
		'>', '?', '\a', '/', '\x2', '\x2', '?', '@', '\a', '\x7F', '\x2', '\x2', 
		'@', '\x41', '\a', '\x7F', '\x2', '\x2', '\x41', '\x42', '\x3', '\x2', 
		'\x2', '\x2', '\x42', '\x43', '\b', '\x5', '\x3', '\x2', '\x43', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\a', '\x7F', '\x2', '\x2', 
		'\x45', '\x46', '\a', '\x7F', '\x2', '\x2', '\x46', 'G', '\x3', '\x2', 
		'\x2', '\x2', 'G', 'H', '\b', '\x6', '\x3', '\x2', 'H', '\r', '\x3', '\x2', 
		'\x2', '\x2', 'I', 'J', '\a', 'k', '\x2', '\x2', 'J', 'K', '\a', 'h', 
		'\x2', '\x2', 'K', '\xF', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', 
		'g', '\x2', '\x2', 'M', 'N', '\a', 'n', '\x2', '\x2', 'N', 'O', '\a', 
		'u', '\x2', '\x2', 'O', 'P', '\a', 'g', '\x2', '\x2', 'P', '\x11', '\x3', 
		'\x2', '\x2', '\x2', 'Q', 'R', '\a', 'g', '\x2', '\x2', 'R', 'S', '\a', 
		'p', '\x2', '\x2', 'S', 'T', '\a', '\x66', '\x2', '\x2', 'T', '\x13', 
		'\x3', '\x2', '\x2', '\x2', 'U', 'V', '\a', 'h', '\x2', '\x2', 'V', 'W', 
		'\a', 'q', '\x2', '\x2', 'W', 'X', '\a', 't', '\x2', '\x2', 'X', '\x15', 
		'\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\a', 'k', '\x2', '\x2', 'Z', '[', 
		'\a', 'p', '\x2', '\x2', '[', '\x17', '\x3', '\x2', '\x2', '\x2', '\\', 
		']', '\a', '\x30', '\x2', '\x2', ']', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'^', '_', '\a', ']', '\x2', '\x2', '_', '\x1B', '\x3', '\x2', '\x2', '\x2', 
		'`', '\x61', '\a', '_', '\x2', '\x2', '\x61', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\x62', '\x64', '\t', '\x3', '\x2', '\x2', '\x63', '\x62', '\x3', 
		'\x2', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\x3', '\x2', '\x2', 
		'\x2', '\x66', '\x1F', '\x3', '\x2', '\x2', '\x2', 'g', 'm', '\a', '$', 
		'\x2', '\x2', 'h', 'l', '\n', '\x4', '\x2', '\x2', 'i', 'j', '\a', '^', 
		'\x2', '\x2', 'j', 'l', '\v', '\x2', '\x2', '\x2', 'k', 'h', '\x3', '\x2', 
		'\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 'l', 'o', '\x3', '\x2', 
		'\x2', '\x2', 'm', 'k', '\x3', '\x2', '\x2', '\x2', 'm', 'n', '\x3', '\x2', 
		'\x2', '\x2', 'n', 'p', '\x3', '\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', 
		'\x2', '\x2', 'p', 'q', '\a', '$', '\x2', '\x2', 'q', '!', '\x3', '\x2', 
		'\x2', '\x2', 'r', 's', '\a', 'v', '\x2', '\x2', 's', 't', '\a', 't', 
		'\x2', '\x2', 't', 'u', '\a', 'w', '\x2', '\x2', 'u', '|', '\a', 'g', 
		'\x2', '\x2', 'v', 'w', '\a', 'h', '\x2', '\x2', 'w', 'x', '\a', '\x63', 
		'\x2', '\x2', 'x', 'y', '\a', 'n', '\x2', '\x2', 'y', 'z', '\a', 'u', 
		'\x2', '\x2', 'z', '|', '\a', 'g', '\x2', '\x2', '{', 'r', '\x3', '\x2', 
		'\x2', '\x2', '{', 'v', '\x3', '\x2', '\x2', '\x2', '|', '#', '\x3', '\x2', 
		'\x2', '\x2', '}', '~', '\a', 'g', '\x2', '\x2', '~', '\x7F', '\a', 's', 
		'\x2', '\x2', '\x7F', '%', '\x3', '\x2', '\x2', '\x2', '\x80', '\x84', 
		'\t', '\x5', '\x2', '\x2', '\x81', '\x83', '\t', '\x6', '\x2', '\x2', 
		'\x82', '\x81', '\x3', '\x2', '\x2', '\x2', '\x83', '\x86', '\x3', '\x2', 
		'\x2', '\x2', '\x84', '\x82', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', 
		'\x3', '\x2', '\x2', '\x2', '\x85', '\'', '\x3', '\x2', '\x2', '\x2', 
		'\x86', '\x84', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\a', '\x31', 
		'\x2', '\x2', '\x88', '\x89', '\a', ',', '\x2', '\x2', '\x89', '\x8D', 
		'\x3', '\x2', '\x2', '\x2', '\x8A', '\x8C', '\v', '\x2', '\x2', '\x2', 
		'\x8B', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8F', '\x3', '\x2', 
		'\x2', '\x2', '\x8D', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8B', 
		'\x3', '\x2', '\x2', '\x2', '\x8E', '\x90', '\x3', '\x2', '\x2', '\x2', 
		'\x8F', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x90', '\x91', '\a', ',', 
		'\x2', '\x2', '\x91', '\x92', '\a', '\x31', '\x2', '\x2', '\x92', '\x93', 
		'\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\b', '\x14', '\x4', '\x2', 
		'\x94', ')', '\x3', '\x2', '\x2', '\x2', '\x95', '\x97', '\t', '\a', '\x2', 
		'\x2', '\x96', '\x95', '\x3', '\x2', '\x2', '\x2', '\x97', '\x98', '\x3', 
		'\x2', '\x2', '\x2', '\x98', '\x96', '\x3', '\x2', '\x2', '\x2', '\x98', 
		'\x99', '\x3', '\x2', '\x2', '\x2', '\x99', '\x9A', '\x3', '\x2', '\x2', 
		'\x2', '\x9A', '\x9B', '\b', '\x15', '\x4', '\x2', '\x9B', '+', '\x3', 
		'\x2', '\x2', '\x2', '\r', '\x2', '\x3', ':', '<', '\x65', 'k', 'm', '{', 
		'\x84', '\x8D', '\x98', '\x5', '\a', '\x3', '\x2', '\x6', '\x2', '\x2', 
		'\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
